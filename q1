class TaskManager:
    def __init__(self):
        self.tasks = {}

    def add_task(self, task_id, task_name, task_status):
        if task_id in self.tasks:
            print(f"{task_id} already exists.")
        else:
            self.tasks[task_id] = {'name': task_name, 'status': task_status}
            print(f"Task added: ID={task_id}, Name={task_name}, Status={task_status}")

    def update_task(self, task_id, new_name=None, new_status=None):
        if task_id not in self.tasks:
            print(f"{task_id} does not exist.")
        else:
            if new_name:
                self.tasks[task_id]['name'] = new_name
            if new_status:
                self.tasks[task_id]['status'] = new_status
            print(f"Task updated: ID={task_id}, New Name={new_name}, New Status={new_status}")

    def delete_task(self, task_name):
        to_delete = [id for id, task in self.tasks.items() if task['name'] == task_name]
        if not to_delete:
            print(f"No task found with name {task_name}.")
        else:
            for task_id in to_delete:
                del self.tasks[task_id]
            print(f"Task(s) with name {task_name} deleted.")

    def list_all_tasks(self):
        if not self.tasks:
            print("No tasks available.")
        else:
            print("Listing all tasks:")
            for task_id, details in self.tasks.items():
                print(f"ID: {task_id}, Name: {details['name']}, Status: {details['status']}")

    def search_task(self, search_term):
        found = False
        for task_id, details in self.tasks.items():
            if search_term == task_id or search_term == details['name']:
                print(f"Found Task: ID={task_id}, Name={details['name']}, Status={details['status']}")
                found = True
        if not found:
            print(f"No task found with search term {search_term}.")

    def list_tasks_by_last_letter(self, letter):
        found = False
        print(f"Listing tasks ending with letter {letter}:")
        for task_id, details in self.tasks.items():
            if details['name'].endswith(letter):
                print(f"ID: {task_id}, Name: {details['name']}, Status: {details['status']}")
                found = True
        if not found:
            print(f"No tasks found ending with letter {letter}.")

def main():
    manager = TaskManager()
    
    while True:
        print("\nTask Management System")
        print("1. Add Task")
        print("2. Update Task")
        print("3. Delete Task")
        print("4. List All Tasks")
        print("5. Search Task")
        print("6. List Tasks by Last Letter")
        print("7. Exit")

        choice = input("Enter your choice (1-7): ")

        if choice == '1':
            task_id = input("Enter Task ID: ")
            task_name = input("Enter Task Name: ")
            task_status = input("Enter Task Status: ")
            manager.add_task(task_id, task_name, task_status)

        elif choice == '2':
            task_id = input("Enter Task ID to Update")
            new_name = input("Enter New Task Name ")
            new_status = input("Enter New Task Status")
            manager.update_task(task_id, new_name, new_status)

        elif choice == '3':
            task_name = input("Enter Task Name to Delete")
            manager.delete_task(task_name)

        elif choice == '4':
            manager.list_all_tasks()

        elif choice == '5':
            search_term = input("Enter Task ID or Name to Search: ")
            manager.search_task(search_term)

        elif choice == '6':
            letter = input("Enter the last letter to filter tasks by: ")
            manager.list_tasks_by_last_letter(letter)

        elif choice == '7':
            print("Task Management System.")
            break

        else:
            print("Invalid")

if __name__ == "__main__":
    main()
